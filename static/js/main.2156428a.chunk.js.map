{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","goods","isListVisible","isReversed","sortBy","isReset","goodsLength","reverse","setState","criterion","goodsLengthSwitcher","e","value","target","valueAsNumber","this","visibleGoods","filter","good","length","sort","g1","g2","localeCompare","className","type","onClick","action","htmlFor","id","min","max","step","onChange","map","React","Component","ReactDOM","render","document","getElementById"],"mappings":"mPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAYIC,E,4MACJC,MAAQ,CACNC,MAAOH,EACPI,eAAe,EACfC,YAAY,EACZC,OAAQ,GACRC,SAAS,EACTC,YAAa,G,EAGfC,QAAU,WACR,EAAKC,UAAS,SAAAR,GAAK,MAAK,CACtBG,YAAaH,EAAMG,WACnBE,SAAS,O,EAIbD,OAAS,SAACK,GACR,EAAKD,SAAS,CACZJ,OAAQK,EACRJ,SAAS,K,EAIbK,oBAAsB,SAACC,GACrB,IACMC,EADaD,EAAXE,OACaC,cAErB,EAAKN,SAAS,CAAEF,YAAaM,K,4CAG/B,WAAU,IAAD,OACP,EAOIG,KAAKf,MANPE,EADF,EACEA,cACAC,EAFF,EAEEA,WACAF,EAHF,EAGEA,MACAI,EAJF,EAIEA,QACAD,EALF,EAKEA,OACAE,EANF,EAMEA,YAGIU,EAAe,YAAIf,GAAOgB,QAAO,SAAAC,GAAI,OAAIA,EAAKC,QAAUb,KAqB9D,OAnBKD,IACHW,EAAaI,MAAK,SAACC,EAAIC,GACrB,OAAQlB,GACN,IAAK,SACH,OAAOiB,EAAGF,OAASG,EAAGH,OAExB,IAAK,WACH,OAAOE,EAAGE,cAAcD,GAE1B,QACE,OAAO,MAITnB,GACFa,EAAaT,WAKf,sBAAKiB,UAAU,MAAf,UACE,sDAIEtB,GACA,wBACEuB,KAAK,SACLC,QAAS,kBAAM,EAAKlB,SAAS,CAAEN,eAAe,KAFhD,mBAQDA,GACC,qCACE,wBACEuB,KAAK,SACLC,QAASX,KAAKR,QAFhB,qBAOA,wBACEkB,KAAK,SACLC,QAAS,kBAAM,EAAKtB,OAAO,aAF7B,iCAOA,wBACEqB,KAAK,SACLC,QAAS,kBAAM,EAAKtB,OAAO,WAF7B,4BAOA,wBACEqB,KAAK,SACLC,QAAS,kBAAM,EAAKlB,SAAS,CAC3BH,SAAS,EACTF,YAAY,EACZG,YAAa,KALjB,mBAWA,sBAAMqB,OAAO,IAAb,SACE,wBAAOC,QAAQ,cAAf,UACG,0BACD,wBAAQA,QAAQ,cAAhB,SAA+BtB,IAC/B,uBACEuB,GAAG,cACHJ,KAAK,QACLK,IAAI,IACJC,IAAI,KACJC,KAAK,IACLpB,MAAON,EACP2B,SAAUlB,KAAKL,2BAKrB,6BAEGM,EAAakB,KAAI,SAAAhB,GAAI,OACpB,6BACGA,GADMA,kB,GAlIPiB,IAAMC,WA+ITrC,ICrKfsC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2156428a.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  isListVisible: boolean;\n  goods: string[];\n  isReversed: boolean;\n  sortBy: string;\n  isReset: boolean;\n  goodsLength: number;\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    goods: goodsFromServer,\n    isListVisible: false,\n    isReversed: false,\n    sortBy: '',\n    isReset: true,\n    goodsLength: 1,\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n      isReset: false,\n    }));\n  };\n\n  sortBy = (criterion: string) => {\n    this.setState({\n      sortBy: criterion,\n      isReset: false,\n    });\n  };\n\n  goodsLengthSwitcher = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = e;\n    const value = target.valueAsNumber;\n\n    this.setState({ goodsLength: value });\n  };\n\n  render() {\n    const {\n      isListVisible,\n      isReversed,\n      goods,\n      isReset,\n      sortBy,\n      goodsLength,\n    } = this.state;\n\n    const visibleGoods = [...goods].filter(good => good.length >= goodsLength);\n\n    if (!isReset) {\n      visibleGoods.sort((g1, g2) => {\n        switch (sortBy) {\n          case 'length':\n            return g1.length - g2.length;\n\n          case 'alphabet':\n            return g1.localeCompare(g2);\n\n          default:\n            return 0;\n        }\n      });\n\n      if (isReversed) {\n        visibleGoods.reverse();\n      }\n    }\n\n    return (\n      <div className=\"App\">\n        <h1>\n          React list of goods\n        </h1>\n\n        {!isListVisible && (\n          <button\n            type=\"button\"\n            onClick={() => this.setState({ isListVisible: true })}\n          >\n            Start\n          </button>\n        )}\n\n        {isListVisible && (\n          <>\n            <button\n              type=\"button\"\n              onClick={this.reverse}\n            >\n              Reverse\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={() => this.sortBy('alphabet')}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={() => this.sortBy('length')}\n            >\n              Sort by length\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={() => this.setState({\n                isReset: true,\n                isReversed: false,\n                goodsLength: 1,\n              })}\n            >\n              Reset\n            </button>\n\n            <form action=\"#\">\n              <label htmlFor=\"goodsLength\">\n                {'Selected goods length: '}\n                <output htmlFor=\"goodsLength\">{goodsLength}</output>\n                <input\n                  id=\"goodsLength\"\n                  type=\"range\"\n                  min=\"1\"\n                  max=\"10\"\n                  step=\"1\"\n                  value={goodsLength}\n                  onChange={this.goodsLengthSwitcher}\n                />\n              </label>\n            </form>\n\n            <ul>\n\n              {visibleGoods.map(good => (\n                <li key={good}>\n                  {good}\n                </li>\n              ))}\n\n            </ul>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}